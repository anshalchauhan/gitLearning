1. Install Git

2. Update Git Info about user
PS C:\Users\Anshal Chauhan> git config --global user.name "anshal"
PS C:\Users\Anshal Chauhan> git config --global user.email "anshalchauhan889@gmail.com"

3. Git, Working Directory, Staging area and commit history concepts

4. git init - to initialize repository
PS A:\practice\git> git init
Initialized empty Git repository in A:/practice/git/.git/

5. Project Directory = Git
Under Git -> Working Directory and Local repository(.git, hidden folder)

under Local repository -> Staging area.

Add untracked files(files in working directory to staging area)

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        notes.txt

Commit is the object to add the file in staging area.

6. Add git files to staging area
PS A:\practice\git> git add notes.txt
PS A:\practice\git> git status
On branch main

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   notes.txt

PS A:\practice\git>

it is in staging environment not staged yet.
to stage it use 

git commit -m "(give some commit name here)"
PS A:\practice\git> git commit -m "notes commit"
[main (root-commit) d706c8b] notes commit
 1 file changed, 26 insertions(+)
 create mode 100644 notes.txt


7. git log - to see all commit history
PS A:\practice\git> git log
commit d706c8b40f8a16698d5ed12b48229d36c5371f34 (HEAD -> main)
Author: anshal <anshalchauhan889@gmail.com>
Date:   Fri Feb 2 13:15:01 2024 +0530

    notes commit

8. To skip the stagin part use -a
PS A:\practice\git> git commit -a -m "notes 1 commit"
[main aec8e88] notes 1 commit
 1 file changed, 32 insertions(+), 1 deletion(-)

9. diff command - To know what has been added till last commit
PS A:\practice\git> git diff
diff --git a/notes.txt b/notes.txt
index e4bc714..10e93ce 100644     
--- a/notes.txt
+++ b/notes.txt
@@ -55,3 +55,8 @@ Date:   Fri Feb 2 13:15:01 2024 +0530
     notes commit

 8. To skip the stagin part use -a
+PS A:\practice\git> git commit -a -m "notes 1 commit"
+[main aec8e88] notes 1 commit
+ 1 file changed, 32 insertions(+), 1 deletion(-)
+
+9. diff command - To know what has been added till last commit

10. If u have staged the changes then use
git diff --staged

11. git add notes.txt credentials.txt
or
for all files use
git add .

12. Delete
first delete file from git.
git rm --cached credentials.txt

then delete from working directory

13. Remote repository - this comes into picture for collaboration, various tools like github, gitlab and bitbucket

14. git clone https.....
to clone a repository

15. Creating repository

16. To connect your local repository to remote repository
Two ways,
1. HTTPS
2. SSH

Choose ssh, because in https user will have to login for every commit,
To choose ssh
use command 

ssh-keygen -o
(***remember only once use this command)

Enter same passphrase again: 
Your identification has been saved in C:\Users\Anshal Chauhan/.ssh/id_rsa.
Your public key has been saved in C:\Users\Anshal Chauhan/.ssh/id_rsa.pub. 
The key fingerprint is:
SHA256:6UzS8vjFvIBFT8i/T9tjHOuX69P7hppPcwU33owjxbw anshal chauhan@ANSHAL   
The key's randomart image is:
+---[RSA 3072]----+
|                 |
|       . .   o   |
|        + .   =..|
|       o =   ..*o|
|      o S o . E.+|
|       @ o . ....|
|      o = = ..o++|
|       . o + =*=+|
|        . . ===B*|
+----[SHA256]-----+

Go to the directory where .ssh is saved
PS C:\users\Anshal Chauhan\.ssh>

Enter command: ls

PS C:\users\Anshal Chauhan\.ssh> cat id_rsa.pub
ssh-rsa AAAABS...........TmRl6k= anshal chauhan@ANSHAL

Copy the entire key
Go to Github -> settings -> SSh and Gpg keys -> New SSh key -> (add title, add ssh key) -> add ssh key

Every time u push something this ssh key will be verfied.

17. to map local repository to remote repository
git branch -M main
git remote add origin git@github.com:anshalchauhan/gitLearning.git
git push -u origin main

18. git commit will only update file in local respository
for commiting in remote repository we need to push the change after commiting

PS A:\practice\git> git commit -a -m "notes 4 commit" 
